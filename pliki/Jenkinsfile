pipeline {
    agent any

    triggers {
        pollSCM('*/1 * * * *')
    }

    stages {
        stage('Clear'){
            steps{
                echo "czystka"
                sh '''
                cd ./pliki/dockery
                chmod +x clear.sh
                ./clear.sh
                '''
            }
        }
        stage('Build & test') {
            steps {
                echo "Build and test "
                sh '''
                cd ./pliki/dockery
                docker compose up --exit-code-from test
                '''
            }
        }
        stage('logi') {
            steps {
                echo 'logi:'
                sh '''
                cd ./pliki/dockery
                docker compose logs app > logi-build.txt
                docker compose logs test > logi-test.txt
                docker compose down
                '''
            }
        }
        stage('deploy') {
            steps {
                echo 'deploy ..'
                sh '''
                cd ./pliki/dockery
                docker build --no-cache -t ob_deploy -f DockerfileDeploy .
                docker run -d -p 12345:3000 --name kon_deploy ob_deploy
            
                '''
            }
        }
        stage('publish') {
            steps {
                echo 'archiving and publishing ..'
                sh '''
                
                pwd
                mkdir -p ./archive
                cd archive
                pwd
                docker cp kon_deploy:home/build .
                cd ..
                pwd
                tar -czf archive.tar.gz archive/
        
                archiveArtifacts(artifacts: 'archive.tar.gz', onlyIfSuccessful: true)
            
                '''
            }
        }
    }
}